{"expireTime":9007200850490198000,"key":"gatsby-plugin-mdx-entire-payload-5b7d5254ecf195461b226f3fc59bb348-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/uma.krishnan/projects/uma/material-ui-theme-overrides/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":139,"offset":140},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":142},"end":{"line":5,"column":29,"offset":170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Country with defaults","position":{"start":{"line":7,"column":1,"offset":172},"end":{"line":7,"column":22,"offset":193},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":172},"end":{"line":7,"column":22,"offset":193},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"    <Country setShowEditor={(content) => console.log(`setShowEditor: ${content}`)} updateCell={(newCellValue) => alert(`Sent to Parent: ${newCellValue}`)} />","position":{"start":{"line":8,"column":1,"offset":194},"end":{"line":10,"column":4,"offset":362},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Country with invalid country defaults to default country","position":{"start":{"line":11,"column":1,"offset":363},"end":{"line":11,"column":57,"offset":419},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":363},"end":{"line":11,"column":57,"offset":419},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"    <Country country=\"zz\" setShowEditor={(content) => console.log(`setShowEditor: ${content}`)} updateCell={(newCellValue) => alert(`Sent to Parent: ${newCellValue}`)}/>","position":{"start":{"line":12,"column":1,"offset":420},"end":{"line":14,"column":4,"offset":600},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Country with country with size","position":{"start":{"line":16,"column":1,"offset":602},"end":{"line":16,"column":31,"offset":632},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":602},"end":{"line":16,"column":31,"offset":632},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"    <Country country=\"IN\" size=\"lg\" setShowEditor={(content) => console.log(`setShowEditor: ${content}`)} updateCell={(newCellValue) => alert(`Sent to Parent: ${newCellValue}`)}/>","position":{"start":{"line":17,"column":1,"offset":633},"end":{"line":19,"column":4,"offset":823},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Editable Country","position":{"start":{"line":21,"column":1,"offset":825},"end":{"line":21,"column":17,"offset":841},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":825},"end":{"line":21,"column":17,"offset":841},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"    <Country country=\"IN\" setShowEditor={(content) => console.log(`setShowEditor: ${content}`)} updateCell={(newCellValue) => alert(`Sent to Parent: ${newCellValue}`)}/>","position":{"start":{"line":22,"column":1,"offset":842},"end":{"line":24,"column":4,"offset":1022},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":26,"column":1,"offset":1024},"end":{"line":26,"column":31,"offset":1054},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":26,"column":31,"offset":1054}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/uma.krishnan/projects/uma/material-ui-theme-overrides/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Country with defaults`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`    <Country setShowEditor={(content) => console.log(\\`setShowEditor: \\${content}\\`)} updateCell={(newCellValue) => alert(\\`Sent to Parent: \\${newCellValue}\\`)} />\n`}</code></pre>\n    <p>{`Country with invalid country defaults to default country`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`    <Country country=\"zz\" setShowEditor={(content) => console.log(\\`setShowEditor: \\${content}\\`)} updateCell={(newCellValue) => alert(\\`Sent to Parent: \\${newCellValue}\\`)}/>\n`}</code></pre>\n    <p>{`Country with country with size`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`    <Country country=\"IN\" size=\"lg\" setShowEditor={(content) => console.log(\\`setShowEditor: \\${content}\\`)} updateCell={(newCellValue) => alert(\\`Sent to Parent: \\${newCellValue}\\`)}/>\n`}</code></pre>\n    <p>{`Editable Country`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`    <Country country=\"IN\" setShowEditor={(content) => console.log(\\`setShowEditor: \\${content}\\`)} updateCell={(newCellValue) => alert(\\`Sent to Parent: \\${newCellValue}\\`)}/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}