{"expireTime":9007200850563245000,"key":"gatsby-plugin-mdx-entire-payload-bc550cc7e52eb21e72150ef1652c6802-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/uma.krishnan/projects/uma/material-ui-theme-overrides/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":139,"offset":140},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":142},"end":{"line":5,"column":29,"offset":170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Standard Component","position":{"start":{"line":7,"column":1,"offset":172},"end":{"line":7,"column":19,"offset":190},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":172},"end":{"line":7,"column":19,"offset":190},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"    <ProgressBar\n        value={87}\n    />","position":{"start":{"line":8,"column":1,"offset":191},"end":{"line":12,"column":4,"offset":244},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":14,"column":1,"offset":246},"end":{"line":14,"column":31,"offset":276},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":14,"column":31,"offset":276}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/uma.krishnan/projects/uma/material-ui-theme-overrides/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Standard Component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`    <ProgressBar\n        value={87}\n    />\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}